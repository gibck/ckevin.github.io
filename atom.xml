<?xml version="1.0" encoding="utf-8"?>
<feed xmlns="http://www.w3.org/2005/Atom">
  <title>Kevin Blog</title>
  
  <subtitle>每个人都会累，没人能为你承担孤单和疲惫。所以总有一瞬间，我们要学会自己长大</subtitle>
  <link href="/atom.xml" rel="self"/>
  
  <link href="https://gibck.github.io/"/>
  <updated>2018-07-07T09:47:06.190Z</updated>
  <id>https://gibck.github.io/</id>
  
  <author>
    <name>kevin</name>
    
  </author>
  
  <generator uri="http://hexo.io/">Hexo</generator>
  
  <entry>
    <title>JAVA8新特性</title>
    <link href="https://gibck.github.io/2018/07/06/JAVA8%E6%96%B0%E7%89%B9%E6%80%A7/"/>
    <id>https://gibck.github.io/2018/07/06/JAVA8新特性/</id>
    <published>2018-07-06T08:34:50.000Z</published>
    <updated>2018-07-07T09:47:06.190Z</updated>
    
    <content type="html"><![CDATA[<h2 id="Java8-Jdk新特性"><a href="#Java8-Jdk新特性" class="headerlink" title="Java8 Jdk新特性"></a>Java8 Jdk新特性</h2><img src="/img/2.jpg" class="[class names]"><a id="more"></a><h3 id="stream"><a href="#stream" class="headerlink" title="stream"></a>stream</h3><ol><li>由值创建流<blockquote><p>可以使用Stream的静态方法Stream.of显示的创建一个流。它可以接收任意数量的参数。</p></blockquote></li></ol><pre><code class="java">//创建字符串流Stream&lt;String&gt; stream = Stream.of(&quot;hexo&quot;,&quot;java8&quot;,&quot;lambdas&quot;,&quot;stream&quot;);//把所有字母转成大写，打印出来stream.map(String::toUpperCase).forEach(System.out::println);</code></pre><ol start="2"><li>由数组创建流<blockquote><p>可以使用Arrays的静态方法Arrays.stream把数组转换成流。</p></blockquote></li></ol><pre><code>``` java    int[] numArr = {1,2,3,4,5};    // int数组转成IntStream流，计算总和是15    int numCount = Arrays.stream(numArr).sum();```</code></pre><ol start="3"><li>由文件生成流<blockquote><p>可以使用Files的静态方法Files.lines,它会返回一个由指定文件的各行字符串流。<br>flatMap是产生一个扁平的单词流，而不是给每一行生成一个单词流。</p></blockquote></li></ol><pre><code class="java">Stream&lt;String&gt; lines = Files.lines(Paths.get(&quot;D:/data.txt&quot;),Charset.defaultCharset());//去除重复的数据，然后打印出来lines.flatMap(line-&gt;Arrays.stream(line.split(&quot;,&quot;)))     .distinct()     .forEach(System.out::println);</code></pre><h3 id="map"><a href="#map" class="headerlink" title="map"></a>map</h3><h3 id="flatMap"><a href="#flatMap" class="headerlink" title="flatMap"></a>flatMap</h3><h3 id="filter"><a href="#filter" class="headerlink" title="filter"></a>filter</h3><h3 id="reduce"><a href="#reduce" class="headerlink" title="reduce"></a>reduce</h3>]]></content>
    
    <summary type="html">
    
      &lt;h2 id=&quot;Java8-Jdk新特性&quot;&gt;&lt;a href=&quot;#Java8-Jdk新特性&quot; class=&quot;headerlink&quot; title=&quot;Java8 Jdk新特性&quot;&gt;&lt;/a&gt;Java8 Jdk新特性&lt;/h2&gt;&lt;img src=&quot;/img/2.jpg&quot; class=&quot;[class names]&quot;&gt;
    
    </summary>
    
      <category term="JAVA" scheme="https://gibck.github.io/categories/JAVA/"/>
    
    
      <category term="java8" scheme="https://gibck.github.io/tags/java8/"/>
    
  </entry>
  
  <entry>
    <title>MarkDown语法总结</title>
    <link href="https://gibck.github.io/2018/07/05/MarkDown%E8%AF%AD%E6%B3%95%E6%80%BB%E7%BB%93/"/>
    <id>https://gibck.github.io/2018/07/05/MarkDown语法总结/</id>
    <published>2018-07-05T09:49:41.000Z</published>
    <updated>2018-07-07T03:47:10.261Z</updated>
    
    <content type="html"><![CDATA[<h1 id="Hexo-Markdown语法"><a href="#Hexo-Markdown语法" class="headerlink" title="Hexo Markdown语法"></a>Hexo Markdown语法</h1><img src="/img/1.jpg" class="[class names]"><p>折腾了好久终于把Hexo弄好了，真的是一波三折。具体怎么安装的<a href="https://hexo.io" target="_blank" rel="noopener">请看官网上的教程</a></p><a id="more"></a><ul><li>引入图片<br>  <code>[](http://***.img)</code></li><li>加粗、斜体<pre><code class="java">  **加粗的字体**  *斜体*</code></pre></li><li>主题<pre><code class="java">  # 一级主题  ## 二级主题  ### 三级主题</code></pre></li><li>表格<pre><code class="java">  | 表头1|表头2|表头3|表头4  | - | :- | :-: | -: |  |默认左对齐|左对齐|居中对其|右对齐|  |默认左对齐|左对齐|居中对其|右对齐|  |默认左对齐|左对齐|居中对其|右对齐|</code></pre></li></ul><blockquote><p>效果</p></blockquote><table><thead><tr><th>表头</th><th style="text-align:left">表头</th><th style="text-align:center">表头</th><th style="text-align:right">表头</th></tr></thead><tbody><tr><td>默认左对齐</td><td style="text-align:left">左对齐</td><td style="text-align:center">居中对其</td><td style="text-align:right">右对齐</td></tr><tr><td>默认左对齐</td><td style="text-align:left">左对齐</td><td style="text-align:center">居中对其</td><td style="text-align:right">右对齐</td></tr><tr><td>默认左对齐</td><td style="text-align:left">左对齐</td><td style="text-align:center">居中对其</td><td style="text-align:right">右对齐</td></tr></tbody></table><ul><li>代码块<pre><code class="javascript">  ```javascript   var i = 1;  function fn(a){    log.info(a);  }  `` `</code></pre></li></ul><blockquote><p>效果</p></blockquote><pre><code class="javascript">    var i = 1;    function fn(a){        log.info(a);    }</code></pre>]]></content>
    
    <summary type="html">
    
      &lt;h1 id=&quot;Hexo-Markdown语法&quot;&gt;&lt;a href=&quot;#Hexo-Markdown语法&quot; class=&quot;headerlink&quot; title=&quot;Hexo Markdown语法&quot;&gt;&lt;/a&gt;Hexo Markdown语法&lt;/h1&gt;&lt;img src=&quot;/img/1.jpg&quot; class=&quot;[class names]&quot;&gt;
&lt;p&gt;折腾了好久终于把Hexo弄好了，真的是一波三折。具体怎么安装的&lt;a href=&quot;https://hexo.io&quot; target=&quot;_blank&quot; rel=&quot;noopener&quot;&gt;请看官网上的教程&lt;/a&gt;&lt;/p&gt;
    
    </summary>
    
    
      <category term="markedown" scheme="https://gibck.github.io/tags/markedown/"/>
    
      <category term="hexo" scheme="https://gibck.github.io/tags/hexo/"/>
    
  </entry>
  
</feed>
